// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SuperHeroes_Api_App.Data;

#nullable disable

namespace SuperHeroes_Api_App.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240515200324_Migracja3")]
    partial class Migracja3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Alignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AlignmentName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("alignment");

                    b.HasKey("Id");

                    b.ToTable("alignment", (string)null);
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Attributee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("attribute_name");

                    b.HasKey("Id");

                    b.ToTable("attribute", (string)null);
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Colour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ColourName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("colour");

                    b.HasKey("Id");

                    b.ToTable("colour", (string)null);
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.HasKey("Id");

                    b.ToTable("gender", (string)null);
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.HeroAttribute", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("integer")
                        .HasColumnName("hero_id");

                    b.Property<int>("AttributeId")
                        .HasColumnType("integer")
                        .HasColumnName("attribute_id");

                    b.Property<int>("AttributeValue")
                        .HasColumnType("integer")
                        .HasColumnName("attribute_value");

                    b.HasKey("HeroId", "AttributeId");

                    b.HasIndex("AttributeId");

                    b.ToTable("hero_attribute", (string)null);
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.HeroPower", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("integer")
                        .HasColumnName("hero_id");

                    b.Property<int>("PowerId")
                        .HasColumnType("integer")
                        .HasColumnName("power_id");

                    b.HasKey("HeroId", "PowerId");

                    b.HasIndex("PowerId");

                    b.ToTable("hero_power", (string)null);
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("publisher_name");

                    b.HasKey("Id");

                    b.ToTable("publisher", (string)null);
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RaceName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("race");

                    b.HasKey("Id");

                    b.ToTable("race", (string)null);
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Superhero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlignmentId")
                        .HasColumnType("integer")
                        .HasColumnName("alignment_id");

                    b.Property<int>("EyeColourId")
                        .HasColumnType("integer")
                        .HasColumnName("eye_colour_id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<int>("GenderId")
                        .HasColumnType("integer")
                        .HasColumnName("gender_id");

                    b.Property<int>("HairColourId")
                        .HasColumnType("integer")
                        .HasColumnName("hair_colour_id");

                    b.Property<int>("HeightCm")
                        .HasColumnType("integer")
                        .HasColumnName("height_cm");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer")
                        .HasColumnName("publisher_id");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer")
                        .HasColumnName("race_id");

                    b.Property<int>("SkinColourId")
                        .HasColumnType("integer")
                        .HasColumnName("skin_colour_id");

                    b.Property<string>("SuperheroName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("superhero_name");

                    b.Property<int>("WeightKg")
                        .HasColumnType("integer")
                        .HasColumnName("weight_kg");

                    b.HasKey("Id");

                    b.HasIndex("AlignmentId");

                    b.HasIndex("EyeColourId");

                    b.HasIndex("GenderId");

                    b.HasIndex("HairColourId");

                    b.HasIndex("PublisherId");

                    b.HasIndex("RaceId");

                    b.HasIndex("SkinColourId");

                    b.ToTable("superhero", (string)null);
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Superpower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PowerName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("power_name");

                    b.HasKey("Id");

                    b.ToTable("superpower", (string)null);
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.HeroAttribute", b =>
                {
                    b.HasOne("SuperHeroes_Api_App.Model.Attributee", "Attribute")
                        .WithMany("HeroAttributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperHeroes_Api_App.Model.Superhero", "Superhero")
                        .WithMany("HeroAttributes")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Superhero");
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.HeroPower", b =>
                {
                    b.HasOne("SuperHeroes_Api_App.Model.Superhero", "Superhero")
                        .WithMany("HeroPowers")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperHeroes_Api_App.Model.Superpower", "Superpower")
                        .WithMany("HeroPowers")
                        .HasForeignKey("PowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Superhero");

                    b.Navigation("Superpower");
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Superhero", b =>
                {
                    b.HasOne("SuperHeroes_Api_App.Model.Alignment", "Alignment")
                        .WithMany("Superheroes")
                        .HasForeignKey("AlignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperHeroes_Api_App.Model.Colour", "EyeColour")
                        .WithMany("EyeColours")
                        .HasForeignKey("EyeColourId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SuperHeroes_Api_App.Model.Gender", "Gender")
                        .WithMany("Superheroes")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SuperHeroes_Api_App.Model.Colour", "HairColour")
                        .WithMany("HairColours")
                        .HasForeignKey("HairColourId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SuperHeroes_Api_App.Model.Publisher", "Publisher")
                        .WithMany("Superheroes")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperHeroes_Api_App.Model.Race", "Race")
                        .WithMany("Superheroes")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperHeroes_Api_App.Model.Colour", "SkinColour")
                        .WithMany("SkinColours")
                        .HasForeignKey("SkinColourId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alignment");

                    b.Navigation("EyeColour");

                    b.Navigation("Gender");

                    b.Navigation("HairColour");

                    b.Navigation("Publisher");

                    b.Navigation("Race");

                    b.Navigation("SkinColour");
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Alignment", b =>
                {
                    b.Navigation("Superheroes");
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Attributee", b =>
                {
                    b.Navigation("HeroAttributes");
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Colour", b =>
                {
                    b.Navigation("EyeColours");

                    b.Navigation("HairColours");

                    b.Navigation("SkinColours");
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Gender", b =>
                {
                    b.Navigation("Superheroes");
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Publisher", b =>
                {
                    b.Navigation("Superheroes");
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Race", b =>
                {
                    b.Navigation("Superheroes");
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Superhero", b =>
                {
                    b.Navigation("HeroAttributes");

                    b.Navigation("HeroPowers");
                });

            modelBuilder.Entity("SuperHeroes_Api_App.Model.Superpower", b =>
                {
                    b.Navigation("HeroPowers");
                });
#pragma warning restore 612, 618
        }
    }
}
